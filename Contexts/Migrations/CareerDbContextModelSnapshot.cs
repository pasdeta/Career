// <auto-generated />
using System;
using Career.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Career.Migrations
{
    [DbContext(typeof(CareerDbContext))]
    partial class CareerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Career.Models.Entities.Application", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("applicant_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("applied_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("job_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("applicant_id");

                    b.HasIndex("job_id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Career.Models.Entities.CV", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("education")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("experience")
                        .HasColumnType("int");

                    b.Property<string>("work_experience")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CVs");
                });

            modelBuilder.Entity("Career.Models.Entities.Company", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Career.Models.Entities.Job", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("company_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<DateTime>("expire_on")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("is_active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("company_id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("Career.Models.Entities.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("cv_id")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("cv_id")
                        .IsUnique()
                        .HasFilter("[cv_id] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Career.Models.Entities.Application", b =>
                {
                    b.HasOne("Career.Models.Entities.User", "applicant")
                        .WithMany("applications")
                        .HasForeignKey("applicant_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Career.Models.Entities.Job", "job")
                        .WithMany("applications")
                        .HasForeignKey("job_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("applicant");

                    b.Navigation("job");
                });

            modelBuilder.Entity("Career.Models.Entities.Job", b =>
                {
                    b.HasOne("Career.Models.Entities.Company", "company")
                        .WithMany("jobs")
                        .HasForeignKey("company_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");
                });

            modelBuilder.Entity("Career.Models.Entities.User", b =>
                {
                    b.HasOne("Career.Models.Entities.CV", "cv")
                        .WithOne("owner")
                        .HasForeignKey("Career.Models.Entities.User", "cv_id");

                    b.Navigation("cv");
                });

            modelBuilder.Entity("Career.Models.Entities.CV", b =>
                {
                    b.Navigation("owner");
                });

            modelBuilder.Entity("Career.Models.Entities.Company", b =>
                {
                    b.Navigation("jobs");
                });

            modelBuilder.Entity("Career.Models.Entities.Job", b =>
                {
                    b.Navigation("applications");
                });

            modelBuilder.Entity("Career.Models.Entities.User", b =>
                {
                    b.Navigation("applications");
                });
#pragma warning restore 612, 618
        }
    }
}
